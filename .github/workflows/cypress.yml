name: E2E test

on:
  pull_request:
    branches:
      - develop
jobs:
  build:
    name: Build and cache
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: install node
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
    - uses: actions/cache@v3
      id: cache-node
      with:
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        path: |
          node_modules
          ~/.cache
          ~/.npm
    - uses: actions/cache@v3
      id: cache-build
      with:
        key: ${{ runner.os }}-build-${{ hashFiles('src/**/*') }}
        path: |
          dist
          languages
    - uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
    - run: npm ci
    - run: npm run build

  cypress:
    needs: build
    name: ${{ matrix.core.name }}
    runs-on: ubuntu-latest
    if: always()
    strategy:
      matrix:
        core:
          - {name: 'WP latest', version: 'latest'}
          - {name: 'WP minimum', version: 'WordPress/WordPress#5.7'}
          - {name: 'WP trunk', version: 'WordPress/WordPress#master'}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: install node
      uses: actions/setup-node@v3
      with:
        node-version-file: '.nvmrc'
    - uses: actions/cache@v3
      id: cache-node
      with:
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        path: |
          node_modules
          ~/.cache
          ~/.npm
    - uses: actions/cache@v3
      id: cache-build
      with:
        key: ${{ runner.os }}-build-${{ hashFiles('src/**/*') }}
        path: |
          dist
          languages
    - run: npm ci
      if: ${{ steps.cache-node.outputs.cache-hit != 'true' }}
    - run: npm run build
      if: ${{ steps.cache-build.outputs.cache-hit != 'true' }}
    - name: Set the core version
      run: ./tests/bin/set-core-version.js ${{ matrix.core.version }}
    - name: Set up WP environment
      run: npm run env:start
    - name: Test
      run: npm run cypress:run
